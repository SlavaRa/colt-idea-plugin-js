package codeOrchestra.colt.js.plugin.actions.run;

import codeOrchestra.colt.core.rpc.model.ColtLauncherType;
import com.intellij.notification.Notification;
import com.intellij.notification.NotificationType;
import com.intellij.notification.Notifications;
import com.intellij.openapi.actionSystem.AnActionEvent;
import com.intellij.openapi.vfs.VirtualFile;

/**
 * @author Alexander Eliseyev
 */
public class JsRunWithColtNodeAction extends JsRunWithColt {

    public JsRunWithColtNodeAction() {
        myLauncherType = ColtLauncherType.NODE_JS;
    }

    @Override
    public void actionPerformed(AnActionEvent actionEvent) {
        VirtualFile[] virtualFileArray = (VirtualFile[]) actionEvent.getDataContext().getData("virtualFileArray");

        if (virtualFileArray == null || virtualFileArray[0] == null) {
            throw new IllegalStateException(); // should not happen
        }

        String path = virtualFileArray[0].getPath().toLowerCase();
        if(!(path.endsWith(".js"))) {
            Notifications.Bus.notify(new Notification("colt.notification", "COLT", "Main document for node.js can be only JS file.", NotificationType.ERROR));
            return;
        }

        String mainDocumentPath = virtualFileArray[0].getPath();
        String mainDocumentName = virtualFileArray[0].getName();

        runWithColt(actionEvent, mainDocumentPath, mainDocumentName, "autogenerated");
    }

}
